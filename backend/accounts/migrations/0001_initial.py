# Generated by Django 5.2.4 on 2025-08-01 06:21

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='update timestamp')),
                ('number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^09\\d{9}')], verbose_name='number')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is_active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='update timestamp')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is_active')),
            ],
            options={
                'verbose_name': 'provider account',
                'verbose_name_plural': 'provider accounts',
            },
        ),
        migrations.CreateModel(
            name='ProviderAccountTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='update timestamp')),
                ('permission_level', models.CharField(choices=[('admin', 'admin'), ('staff', 'staff'), ('user', 'user')], default='user', max_length=10, verbose_name='permission level')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='accounts.provideraccount', verbose_name='account')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='team', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'provider account team member',
                'verbose_name_plural': 'provider accounts team members',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRequestDeposit',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='update timestamp')),
                ('user_id', models.PositiveBigIntegerField(blank=True, help_text='id of requester user', null=True, verbose_name='user_id')),
                ('amount', models.PositiveBigIntegerField(verbose_name='amount')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('status', models.CharField(choices=[('open', 'open'), ('approved', 'approved'), ('rejected', 'rejected')], default='open', max_length=20, verbose_name='status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='assignee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.provideraccount', verbose_name='account')),
                ('requester', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.provideraccountteammember', verbose_name='requester')),
            ],
            options={
                'verbose_name': 'historical request of deposit',
                'verbose_name_plural': 'historical requests of deposit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ProviderWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='update timestamp')),
                ('balance', models.PositiveBigIntegerField(default=0, verbose_name='balance')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to='accounts.provideraccount', verbose_name='account')),
            ],
            options={
                'verbose_name': 'provider wallet',
                'verbose_name_plural': 'provider wallets',
            },
        ),
        migrations.CreateModel(
            name='RequestCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='update timestamp')),
                ('user_id', models.PositiveBigIntegerField(help_text='id of requester user', verbose_name='user_id')),
                ('amount', models.PositiveBigIntegerField(default='2000', verbose_name='amount')),
                ('phone_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charge_requests', to='accounts.phonenumber')),
                ('provider_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charge_requests', to='accounts.provideraccount')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charge_requests', to='accounts.provideraccountteammember', verbose_name='requester')),
            ],
            options={
                'verbose_name': 'request of charge',
                'verbose_name_plural': 'requests of charges',
            },
        ),
        migrations.CreateModel(
            name='RequestDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create timestamp')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='update timestamp')),
                ('user_id', models.PositiveBigIntegerField(blank=True, help_text='id of requester user', null=True, verbose_name='user_id')),
                ('amount', models.PositiveBigIntegerField(verbose_name='amount')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('status', models.CharField(choices=[('open', 'open'), ('approved', 'approved'), ('rejected', 'rejected')], default='open', max_length=20, verbose_name='status')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.provideraccount', verbose_name='account')),
                ('assignee', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='deposit_requests', to=settings.AUTH_USER_MODEL, verbose_name='assignee')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_requests', to='accounts.provideraccountteammember', verbose_name='requester')),
            ],
            options={
                'verbose_name': 'request of deposit',
                'verbose_name_plural': 'requests of deposit',
            },
        ),
    ]
